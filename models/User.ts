import { MongoHandler } from "../startup/mongo_handler";
import { User } from "../types/User";

const mongoose = MongoHandler.connection;
import Joi from 'joi';
import jwt from 'jsonwebtoken';

const userSchema = new mongoose.Schema({
    email: {
        type: String,
        required: true,
    },
    password: {
        type: String,
        required: true,
    },
    first_name: {
        type: String,
        required: true,
    },
    last_name: {
        type: String,
        required: true,
    },
    phone: {
        type: String,
        required: true,
    },
    email_verified: {
        type: Boolean,
    },
    phone_verified: {
        type: Boolean,
    },
});

userSchema.methods.generateAuthToken = function () {
    // JWT_PRIVATE_KEY generated by: require("crypto").randomBytes(20).toString('hex');
    return jwt.sign({ _id: this._id }, process.env.JWT_PRIVATE_KEY!);
}

const UserModel = mongoose.model("user", userSchema); // modelName, schema

const validateUser = (user: User) => {
    const schema = Joi.object({
        email: Joi.string().required().email(),
        password: Joi.string().required(),
        first_name: Joi.string().required(),
        last_name: Joi.string().required(),
        phone: Joi.string().required(),
    });

    return schema.validate(user);
}
module.exports = { User: UserModel, validateUser }